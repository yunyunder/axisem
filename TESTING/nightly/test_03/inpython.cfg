###############################################################################
#  AxiSEM nightly tests                                                       #
#  Copyright (C) 2014 Simon St√§hler, Kasra Hosseini, Martin van Driel         #
#  Contact: simon.staehler@geophysik.uni-muenchen.de                          #
#                                                                             # 
#  This program is free software; you can redistribute it and/or modify       #
#  it under the terms of the GNU General Public License as published by       #
#  the Free Software Foundation; either version 2 of the License, or          #
#  (at your option) any later version.                                        #
#                                                                             #
#  This program is distributed in the hope that it will be useful,            #
#  but WITHOUT ANY WARRANTY; without even the implied warranty of             #
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              #
#  GNU General Public License for more details.                               #
#                                                                             # 
#  You should have received a copy of the GNU General Public License along    #
#  with this program; if not, write to the Free Software Foundation, Inc.,    #
#  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.                #
###############################################################################


#############################################################################
############ INPUT FILE FOR AXISEM PYTHON INTERFACE (PyAxi.py) ##############
#############################################################################

# ATTENTION: This file should be located in the same directory as PyAxi.py

# To check the Basic, Processing and Visualization requirements:
# python PyAxi.py --check

# All the options for running AXISEM are included here. 
# However, for simplicity, it has been divided into the following sections:
# 1.  GENERAL 
# 2.  MESHER_BASIC
# 3.  SOLVER_BASIC
# 4.  SOURCE_INFO
# 5.  STATION_INFO
# 6.  POST_PROCESSING
# 7.  MSEED, filter, STF
# 8.  MAKE AXISEM Compiling flags
# 9.  MESHER_ADVANCED
# 10. SOLVER_ADVANCED
# 11. TEST


#******************************************************************
#========================= GENERAL ================================
#******************************************************************
[GENERAL]
AXISEM_DIR = ..                          ; Address of AXISEM root directory
SOLVER_NAME = TEST03_SOLVER              ; Solver directory name
# Choose Mesh (local subdirname in SOLVER/MESHES directory) in MESHER_BASIC
VERBOSE = N                              ; For debugging purposes

#### REQUIRED STEPS FOR RUNNING AXISEM ####
# 'NEW_MESH' flag controls all the required steps for a simulation: 
# (except for POST_PROCESSING and TEST)

# ALLOWED OPTIONS:
# Y: Run AXISEM for a NEW mesh! (i.e. both MESHER and SOLVER steps)
# N: Re-run SOLVER (with different parameters) but with the same mesh 
# (i.e. just SOLVER, an old mesh should be there)
# M: (Manual) Full control on the steps (refer to (***) of this section)
NEW_MESH = Y                             
POST_PROCESSING = Y                      ; perform the post processing step

# (***)
# if NEW_MESH = M:
# SELECT THE REQUIRED STEPS FOR RUNNING YOUR SIMULATION
MESHER = N                               ; Run MEHSER
SOLVER = N                               ; Run SOLVER

MESHER_MAKEFILE = Y                      ; Create MESHER Makefile
MESHER_MAKE = Y                          ; make clean; make for MESHER
MESHER_MOVE = Y                          ; Run movemesh.csh

SOLVER_MAKEFILE = Y                      ; Create SOLVER Makefile
SOLVER_COPY = Y                          ; Copy the mesh info as a header
SOLVER_MAKE = Y                          ; make clean; make for SOLVER


#******************************************************************
#========================= MESHER_BASIC ===========================
#******************************************************************
[MESHER_BASIC]
# Changing MESHER/inparam_mesh basic parameters

BACKGROUND_MODEL = 'prem_ani'             ; Background model: SEE BELOW in this section
EXT_MODEL = layer_solid.bm
DOMINANT_PERIOD = 50.                     ; DOMINANT period [s]
NTHETA_SLICES = 2                         ; Number of THETA slices in mesh decomposition
NRADIAL_SLICES = 1                        ; Number of RADIAL slices in mesh decomposition
WRITE_VTK = false                         ; Write vtk output

# Nr of coarsening layers
# 3 is a reasonable choice for models with crust, otherwise 2
# Check the vtk output. No coarsening layer should be at the surface or
# at the solid-fluid boundary
COARSENING_LAYERS = 3

#### MODEL / MESH ####
# Choose Mesh (local subdirname in SOLVER/MESHES directory)
# N.B. The mesh controls the velocity model and the number of CPUs
MESHNAME = TEST03_MESH

#### BACKGROUND MODELS:
# prem_iso:               Isotropic continental PREM model
# prem_iso_solid:         like 'prem_iso', replace fluid outer core with vs=vp/sqrt(3)
# prem_iso_onecrust:      like 'prem_iso' but extend lower crust to surface
# prem_iso_light:         like 'prem_iso' but with mantle material extended to surface
# prem_iso_solid_light:   like 'prem_iso_light', but in fluid outer core vs=vp/sqrt(3)
#
# prem_ani:               Isotropic continental PREM model
# prem_ani_onecrust:      like 'prem_ani' but extend lower crust to surface
# prem_ani_light:         like 'prem_ani' but with mantle material extended to surface
# 
# ak135               AK135 (Isotropic, no attenuation
# ak135f              AK135 (Isotropic, own attenuation)
# iasp91:             Isotropic IASP91 model with PREM density and attenuation
# external:           Layered external model, give file name in EXT_MODEL, the 
#                     inner core needs to be big enough, check VTK output.


#******************************************************************
#========================= SOLVER_BASIC ===========================
#******************************************************************
[SOLVER_BASIC]
# Choose simulation type, allowed options:
# single: Simulation of one basic source. Set sourceparams.dat for the
#         exact type (refer to SOURCE_INFO)
# moment: Full moment tensor, needs four parallel simulations. Set
#         CMTSOLUTION for the source mechanism. (refer to SOURCE_INFO)
SIMULATION_TYPE = single

#### SIMULATION PARAMETERS ####
# Choose desired seismogram length
SEISMOGRAM_LENGTH = 1800.

# Use lateral heterogeneities (aka 2.5D model).
# The model has to be described in inparam_hetero (default: false)
LAT_HETEROGENEITY = .false. 

# Include viscoelastic attenuation (details in SOLVER_ADVANCED)
ATTENUATION = false 

#### WAVEFIELD SNAPSHOTS #####################################
# Save wavefield snapshots for visualization (default: false)
# more details in SOLVER_ADVANCED
SAVE_SNAPSHOTS = false  

# Set verbosity of the code, allowed values:
# 0: only errors
# 1: errors plus some information (default)
# 2: tells funny stories about his time in Princeton
VERBOSITY = 1


#******************************************************************
#========================= SOURCE_INFO ============================
#******************************************************************
[SOURCE_INFO]
# Based on the simulation type chosen in SOLVER_BASIC options:
# single: Simulation of one basic source. Set sourceparams.dat for the
#         exact type
# force:  Vertical force, needs two parallel simulations (and twice the
#         number of CPUs). Set vertforce.dat for the exact source type
# moment: Full moment tensor, needs four parallel simulations. Set
#         CMTSOLUTION for the source mechanism.

SOURCE_STF = 'dirac_0'                

#### SOURCE TIME FUNCTION CHOICES ####
# Smooth Heaviside/erf function: 'quheavi'
# Dirac Delta distribution: 'dirac_0'
# Gaussian and derivatives: 'gauss_0', 'gauss_1' (1st deriv), 'gauss_2' (2nd)
#-----------------------inparam_source-------------------------------

SOURCE_TYPE = 'mtp' 
# Basic source type
# monopoles:   mrr, explosion, mtt_p_mpp, vertforce
# dipoles:     mtr, mpr, thetaforce, phiforce
# quadrupoles: mtp, mtt_m_mpp

SOURCE_LATITUDE = 90.0                    ; Source latitude [degrees]
SOURCE_LONGITUDE = 0.0                   ; Source longitude [degrees]
SOURCE_DEPTH = 100.                      ; Source depth [km]
SOURCE_AMPLITUDE = 1.E20                 ; Amplitude: in Nm (for double couple source) in N (for force sources)


#-----------------------CMTSOLUTION-------------------------------
# CMTSOLUTION parameters: (valid for "moment" type simulation)
CMT_LAT = 90.0                           ; Source latitude [degrees]
CMT_LON = 00.0                           ; Source longitude [degrees]
CMT_DEPTH = 100.0                        ; Source depth [km]

CMT_MRR = 1.0000e+27                     ; MRR component
CMT_MTT = 0.5000e+27                     ; MTT component
CMT_MPP = 2.5000e+27                     ; MPP component
CMT_MRT = 2.0000e+27                     ; MRT component
CMT_MRP = 3.0000e+27                     ; MRP component
CMT_MTP = 1.5000e+27                     ; MTP component

TIME SHIFT = 0.0000
HALF DURATION = 20.0000


#******************************************************************
#========================= STATION_INFO ===========================
#******************************************************************
[STATION_INFO]
# Receiver file type, allowed options:
# colatlon: Colatitude and Longitude for each station.
# stations: SPECFEM-style stations file with latitude, longitude
#           and station name (default)
# database: One station at each GLL point, arbitrary station locations 
#           can be reconstructed from this.
RECFILE_TYPE = stations 


#******************************************************************
#========================= POST_PROCESSING ========================
#******************************************************************
[POST_PROCESSING]
# 'DNC' in the following options means Do-Not-Change
# In this case, it will keep the vaules generated
# by AXISEM automatically.

# receiver coordinate system
# one of: enz, sph, cyl, xyz, src
REC_COMP_SYS = enz 

# period of source time funtion to be convolved
# should be larger then the mesh period
# 0. to not convolve
CONV_PERIOD = 0.

# source time function
# one of: gauss_0, gauss_1, qheavi
CONV_STF = DNC

# displacement or velocity seismograms
SEISTYPE = disp

# make 3D plots of the wavefield
LOAD_SNAPS = DNC

# OUTPUT PATH
DATA_DIR = DNC

# output seismograms at negative time
# (to correct for finite width of the source time function
NEGATIVE_TIME = T

#############################################
# options the 3D wavefield plots
# crossection location, starting and ending phi
3D_PHI_START = DNC
3D_PHI_END = DNC

# radius of top and bottom layer in km
3D_RTOP = DNC
3D_RBOT = DNC

# switches for bottom, top and meridonial surface
3D_PLOT_TOP = DNC 
3D_PLOT_BOT = DNC

# time snapshot selection:
3D_SNAP_BEG = DNC
3D_SNAP_END = DNC
3D_SNAP_STRIDE = DNC

#******************************************************************
#========================= MSEED, Filter, STF =====================
#******************************************************************
[MISC]
# MSEED option generates one MSEED file for each seismogram
# MSEED_ALL option generates one MSEED file for ALL seismograms
MSEED = N                                ; Convert each seismogram into a MSEED file
MSEED_ALL = Y                            ; Convert all the seismograms into ONE MSEED file (seismograms.mseed)

CONV_STF = Y                             ; After converting the seismograms into MSEED, convolve with a Gaussian STF
HALF_DURATION = 5.0                      ; Halfduration for Gaussian STF (do not confuse it with halfduration in the test section)

FILTER = Y                               ; Appy filter(s) (lowpass and highpass as defined below)
FMIN = 0.012                             ; Minimum frequency
FMAX = 0.1                               ; Maximum frequency

#******************************************************************
#========================= make_axisem ============================
#******************************************************************
[MAKE_AXISEM]
# Set name of mpirun command
MPIRUN  = /home/travis/travis/bin/mpirun

# Enable NetCDF
USE_NETCDF = false
NETCDF_PATH = $(TRAVIS_ROOT)

# Enable Serial mode
SERIAL = false

# Include MPI, instead of using module
INCLUDE_MPI = true

# GFORTRAN (fast)
CC      = gcc                                # C compiler
FC      = $(TRAVIS_ROOT)/bin/mpif90          # Fortran compiler
FFLAGS  = -O3 -march=native $(EXTRAFLAGS)
CFLAGS  = -O3 -march=native $(EXTRAFLAGS)
LDFLAGS = -O3 -march=native $(EXTRAFLAGS)


# GFORTRAN (debug)
#CC      = gcc                                # C compiler
#FC      = mpif90                             # Fortran compiler
#FFLAGS  = -Warray-temporaries -fcheck-array-temporaries -fbounds-check -frange-check -pedantic
#CFLAGS  = -Wall 

# PORTLAND (fast)
#CC      = pgcc 
#FC      = mpif90  
#FFLAGS  = -fast 
#CFLAGS  = -fast 

# PORTLAND (debug)
#CC      = pgcc 
#FC      = mpif90  
#FFLAGS  = --Mbounds --traceback -g
#CFLAGS  = --Mbounds --traceback -g

# Intel Compiler suite (fast)
#CC      = mpiicc
#FC      = mpiifort
#FFLAGS  = -vec-report:0 -shared-intel  -heap-arrays 10 -O3 -xHOST
#CFLAGS  = -O3 -xHost
#LDFLAGS = -O3 -xHost 

# Intel Compiler suite (debug)
#CC = mpiicc
#FC = mpiifort
#FFLAGS = -vec-report:0 -g -shared-intel  -mcmodel=medium -check all -traceback -heap-arrays 10
#CFLAGS = -g -traceback



#//////////////////////////////////////////////////////////////////
#//////////////////////////////////////////////////////////////////
#//////////////////////////////////////////////////////////////////

#******************************************************************
#========================= ADVANCED OPTIONS =======================
#******************************************************************
# 1. MESHER_ADVANCED
# 2. SOLVER_ADVANCED
# 3. TEST
#******************************************************************
#========================= MESHER_ADVANCED ========================
#******************************************************************
[MESHER_ADVANCED]
############### FOR THE INCLINED ##############################################
# Resolve inner-core shear wave (default: true)
IC_SHEAR_WAVE = true

# Polynomial order of basis for GLL points inside elements (default: 4)
NPOL = 4

# Number of elements per DOMINANT wavelength (default: 1.5)
EL_PER_LAMBDA = 1.5

# Courant number (default: 0.6)
COURANT_NR = 0.6

# Surface radius (default: 6.371e+6)
RADIUS = 6.371e+6   

# Save mesh files (WARNING: large) (default: false)
SAVE_MESH = false

# Write excessive info output (WARNING: for the inclined)
VERBOSE = false


#******************************************************************
#========================= SOLVER_ADVANCED ========================
#******************************************************************
[SOLVER_ADVANCED]
############### TIME PARAMETERS #################################################
# seismogram sampling rate in seconds 
# Select 0.0, for SAMPLING_PERIOD==TIME_STEP (default: 0.0)
# important consideration: aliasing in case of dirac/heaviside sources 
SAMPLING_PERIOD = 1.0

# Choose desired simulation time step
# set to 0.0 for mesher's suggestion (default)
TIME_STEP = 0.0

# Source period [s]. Put to 0.0 to use mesh resolution (mesh_params.h)
SOURCE_PERIOD = 0.0
 
# Time integration scheme, allowed:
# newmark2:  default, tested
# symplec4, ML_SO4m5, ML_SO6m7, KL_O8m17, SS_35o10
TIME_SCHEME = newmark2

# OUTPUT PATHS
DATA_DIR = ./Data
INFO_DIR = ./Info

# Extra diagnostic output? (default: false)
# Prints VTK files of the actual velocity model (including lateral heterogenei-
# ties), several ASCII files about the Mesh and Seismograms at certain special
# points, like the epicenter, antipode and equator. Not needed for 
# postprocessing, takes several megabytes and produces around 10 files per CPU.
DIAGNOSTIC_FILE_OUTPUT = true

######################## MESH TEST ############################################
# Do mesh tests? Suggested to do once per mesh and revision
MESH_TEST = false

######################## NetCDF output ########################################
# Level of compression of wavefield data (0: off, 9:highest)
DEFLATE_LEVEL = 5

# Time interval between snapshots (default: 20)
SNAPSHOT_DT = 20.

# XDMF wavefield snapshots  (default: xdmf)
# options for values: xdmf, vtk
SNAPSHOTS_FORMAT = xdmf

######################## SENSITIVITY KERNELS ##################################
# Save necessary wavefields for Kernel calculation
# N.b. Kernel calculation needs Axisem Kerner (sold separately)
KERNEL_WAVEFIELDS = false 

# Samples per period
KERNEL_SPP = 8

# source vicinity in wavefields? 
# igno
# mask  (default)
# anal 
KERNEL_SOURCE = mask

# GLL points to save, starting and ending GLL point index
KERNEL_IBEG = 1
KERNEL_IEND = 1

######################## ATTENUATION ##########################################
# number of standard linear solids (default: 5)
NR_LIN_SOLIDS = 5

# minimum frequency in attenuation band [Hz] (default: 0.001)
F_MIN = 0.001
# maximum frequency in attenuation band [Hz] (default: 1.0)
# must be considered carefully for high-frequency simulations
F_MAX = 1.0

# reference frequency of the background model [Hz] (default: 1.0)
F_REFERENCE = 1.0

# use correction of the coefficients for small values of Q (default: true)
SMALL_Q_CORRECTION = true

# Number of frequencies at which the exact Q is sampled in the 
# minimization (default: 100)
NR_F_SAMPLE = 100

# maximum number of iteration in the simulated annealing (default: 100000)
MAXINT_SA = 100000
# starting 'temperature' for the stress relaxation frequencies (default: 0.1)
TSTART_SR = 0.1
# starting 'temperature' for the amplitude coefficients (default: 0.1)
TSTART_AMP = 0.1

# temperature decay rate (default: 0.99995)
T_DECAY = 0.99995

# fix the frequencies log spaced in the attenuation band (default: false)
FIX_FREQ = false

# dump memory vars to vtk (not optimized, only meant for testing, 
# not with cg) (default: false)
DUMP_VTK = false

# use coarse grained memory variables (ONLY for npol = 4) (default: true)
COARSE_GRAINED = true

######################## FOR THE INCLINED #####################################
# Save global kinetic/potential energy? generally not needed
SAVE_ENERGY = .false.

# overwrite background model with homogeneous parameters?
HOMO_MODEL = .false.
HOMO_VP = 10.
HOMO_VS = 5.77
HOMO_RHO = 3.

# Force anisotropic model handling of isotropic models
FORCE_ANISO = .true.


#******************************************************************
#========================= TEST ===================================
#******************************************************************
[TEST]
# Parameters for "TESING" AXISEM against reference solutions (YSPEC)
# For running the tests automatically, use test_axisem.py
TEST = Y                                 ; To test AXISEM?
TEST_FOLDER = ./nightly/test_03          ; Address of the test directory
PLOT = N                                 ; Plot the waveforms
SAVE_PLOTS = Y                           ; Save the plots to a file
PLOT_FORMAT = png                        ; File format for saving the plots
CHANS = ['Z', 'N', 'E']                  ; Required channels
FMIN = 0.0005                            ; Minimum frequency
FMAX = 0.02                              ; Maximum frequency
HALF_DURATION = 20.                      ; Halfduration of the Source Time Function
NSTAT = 20
